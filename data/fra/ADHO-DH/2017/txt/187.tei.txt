Migration de données vers des triplestores
Une migration efficace et cohérentecohérente de donneés fait appel à différentesdifférentes compétencescompétences. Pour assurer la pérénisationpérépérénisation de cette procédureprocédure, une architecture généralegénégénérale et rigoureuse du workflow des différentsdifférents types de donneés à manipuler doit ê tre définiedéfinie. Cette architecture explicite la démarchedémarche globale de tout projet qui souhaite faire migrer ses donneés vers des triplestores. Cette démarchedémarche se subdivise en différentesdifférentes étapesétapes bien identifieés : préparationpréparation des donneés (étudeétude et description structurelle), modeíisation sémantiquesémantique et alignement des donneés structureés avec le modè le sémantiquesémantique et enfin creátion et exposition des triplestores qui vont alors pouvoir ê tre consultésconsultés et intérrogésintérrogéintérrogés. Notons que initialement les donneés sont souvent non structureés ou semi-structureés (notes, rapports, livres, html) et qu'il faut dans un premier temps en extraire une représentationreprésentation structureé (tableurs, base de donneés, fichiers XML) pour pouvoir ensuite construire leur représentationreprésentation sémantiquesémantique plus facilement. Ce continuum d'étapesétapes fait intervenir des compétencescompétences diverses et nécessitenécessite parfois d'adjoindre des profils intermédiairesintermédiaires entre deux étapesétapes pour assurer le passage d'un format de représentationreprésentation de donneés à un autre : (1) donneés non structureés ou semi structureés vers donneés structureés, et (2) donneés structureés vers donneés sémantiquessémantiques. Par ailleurs, l'eíéeíément clédecléde l'architecture de la migration de donneés vers des triplestores est la modeíisation et l'alignement des donneés avec le modè le de graphe sémantiquesémantique choisi. Un graphe sémantiquesémantique est un ensemble de noeuds et d'arcs orientésorientés qui obeíssent à un certain nombre de contraintes et rè gles (raccourci, héritagehéritage, inverse, symétriesymétrie, transitivité)transitivité). Ce sont ces rè gles et contraintes qui définissentdéfinissent la cohérencecohérence et la validitédvaliditéd'un modè le. Nous avons utiliseía version 6.2 de mai 2015 du CIDOC-CRM qui définitdéfinit 94 classes et 168 propriétéspropriétépropriétés ainsi que son implémentationimplémentation par l'UniversitédUniversitéd'Erlangen-Nuremberg. Afin de reáliser la migration, il a fallu procéderprocéder à un alignement des donneés avec certains noeuds du graphe sémantiquesémantique à partir des informations extraites de bases de donneés ou de collections de fichiers XML-EAD. Les noeuds remplis par des valeurs sont des noeuds terminaux et les noeuds intermédiairesintermédiaires sont remplis avec des URIs qui définissentdéfinissent ainsi des chemins vers les noeuds terminaux. Notons qu'une rigueur particuliè re doit ê tre apporteé à la construction des URIs, à la fois pour leur lisibilitémaislisibilitémais égalementégalement pour la cohérencecohérence des chemins dans le graphe afin d'éviteréviter des conflits de chemins et garantir ainsi l'unicitédunicitéd'un chemin donnépar donnépar rapport à un autre. Nous avons identifieíes classes utiles (menant vers au moins une valeur non vide) pour modeíiser les donneés des projets pilotes. Ainsi, la modeíisation et l'alignement effectuéseffectués représententreprésentent des extraits de graphes relatifs aux quatre thè mes suivants : (1) caractéristiquescaractéristiques généralesgénégénérales (identifiant, type, titre, matériaumatériau, dimension, note), bibliographie, composition et similaritédsimilaritéd'objets; (2) évèévè nements de débutdébut d'existence (origine) et de fin d'existence; (3) activitésactivités diverses (transfert de garde, conservation, mesure); (4) inscriptions et autres représentationsreprésentations (photo, dessin, tableau). De façon généralegénégénérale, ces extraits sont assez stables pour tout projet car, dans le CIDOC-CRM, il est possible d'identifier les chemins possibles menant à une information donneé sur un objet. L'alignement n'est pas une tâ che programmatique mais fait appel à des détailsdétails de structure logique propre au modè le de description de donneés choisi par chaque sous projet. C'est une tâ che à mi-chemin entre la modeíisation et l'implémentationimplémentation qu'elle permet d'entrevoir un peu plus clairement. L'alignement définitdéfinit ce à quoi correspond chaque noeud de notre graphe et il ne reste plus qu'à générergénégénérer les fichiers CIDOC-CRM correspondants tout en respectant la syntaxe de la norme RDF. Les triplestores creé́creé́s vont ensuite ê tre exposésexposés pour consultation (sous trois formes : rdf, triplets et résumé attribut-valeur) et interrogation (formulaires généraux et Endpoint Sparql) via notre application web. L'exploitation des triplestores via l'interrogation et l'exploration de ces derniers et les bénéficesbénébénéfices que l'on peut en tirer est l'autre aspect majeur autour de la question de ces nouveaux entrepô ts de documents RDF que sont les triplestores.
Exploitation des triplestores
L'intérêintérê t des triplestores est qu'on a un modè le connu public et publiédepubliéde représentationreprésentation de l'information ce qui permet d'interroger les triplestores indifféremmentindifféremment avec des procéduresprocédures identiques. Nous avons définidéfini deux procéduresprocédures d'exploitation de nos triplestores : des interfaces sous forme de formulaires généraux et des Endpoint Sparql. Les formulaires générauxgénégénéraux sont un moyen simple et assez intuitif, car trè s proche du langage naturel, pour formuler des requê tes vers nos triplestores. Il suffit de remplir les rubriques du formulaire qui nous intéressentintéressent et de lancer la recherche. Une requê te Sparql est automatiquement construite à partir des valeurs des champs renseignésrenseignés du formulaire et c'est cette requê te qui est utiliseé pour interroger le triplestore. Au terme de l'exécutionexécution de la requê te, une liste d'objets seíéseíéctionnéseíéctionnés est renvoyeé en résultatrésultat à l'usager. Par ailleurs, on peut aussi interroger nos triplestores via des Endpoint Sparql. Ce deuxiè me mode d'interrogation nécessitenécessite la connaissance du langage Sparql qui est aujourd'hui le langage de référenceréféréférence pour l'interrogation de documents RDF. Sparql est un langage assez simple mais pas toujours à la porteé de tous. Ainsi, les formulaires générauxgénégénéraux peuvent ê tre vus comme un premier point d'entreé pour l'interrogation des triplestores tandis que les Endpoint Sparql assurent une exploitation plus large de ces triplestores via une formulation libre de requê tes de type "Select". Notons que la notion d'exploitation de triplestores fait appel aux notions d'interrogation et d'exploration de graphe. Ainsi, l'interrogation de triplestores consiste à formuler une requê te Sparql pré-pré-formateé (formulaires générauxgénégénéraux) ou libre (Endpoint Sparql) tandis que l'exploration de triplestores est une forme d'interrogation uniquement possible via des Endpoint Sparql qui permet aussi de découvrirdécouvrir différentsdifférents chemins dans un graphe sémantiquesémantique vers des donneés précisesprécises. En effet, plusieurs chemins peuvent permettre d'obtenir une mê me information dans un graphe (usage de diverses notions : raccourci, héritagehéritage, inverse, raffinement), sachant que ces chemins ne sont pas toujours tous renseignésrenseignés. On peut donc écrireécrire des requê tes Sparql pour découvrirdécouvrir si différentsdifférents chemins vers une donneé préciseprécise existent ou pour connaitre les noeuds terminaux. L'exploration est donc importante pour s'approprier un triplestore spécifiquespécifique. L'exploration permet aussi la comparaison de différentsdifférents triplestores qui décriventdécrivent des donneés similaires (objets d'une mê me périodepériode historique, objets de mê me type, objets identiques) dans un contexte de LOD (Linked Open Data), par exemple. Ainsi, la comparaison de chemins assure une meilleure découvertedécouverte des connaissances et augmente la correction ou l'enrichissement mutuel des connaissances des différentsdifférents acteurs du LOD. Notre application web fournit un LOD pour ModRef ainsi qu'une liste de modè les de requê tes Sparql pour interroger, explorer et valider nos triplestores séparémentséparéséparément ou ensemble. A plus long terme, l'objectif est d'intégrerintégrer d'autres LOD sur internet
(Beek et al., 2016
) (Daga et al., 2016
) pour un partage, un échangeéchange et une découvertedécouverte de nouvelles connaissances à plus grande échelleéchelle. Ainsi, le LOD doit ameíiorer la découvertedécouverte de nouvelles connaissances, du fait de l'usage de formalismes, de langages de métadonneésmétadonneés, de thésaurusthésaurus publiéspubliés, standardisésstandardisés voire normalisésnormalisés.
Remerciements
L'auteur remercie le laboratoire Labex "Les passéspassés dans le présentprésent" de l'UniversitédeUniversitéde Paris 10 et le projet ANR ModRef de référenceréféréférence ANR-11-LABX-0026-01.
