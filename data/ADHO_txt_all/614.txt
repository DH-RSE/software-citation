The success of the digital humanities as a field of research has led to two pressing needs at the interface of computer science and the humanities. First, sustainable software development projects are needed that are focused on humanities research problems. Second, graduate and undergraduate training models are required that address the interdisciplinary nature of digital and computational humanities research (Ramsay, 2012; Reid, 2012). From the application and development of new algorithms to mine texts (e.g. Murdock et al., 2015) to the development of multi-institutional software systems (e.g. Neuroth et al., 2011), many digital humanities projects can only be implemented with the help of computer scientists and software engineers.
We believe that the future success of applying digital and computational approaches to research questions in the humanities depends on forging links between computer science and the humanities. However, the digital humanities need to involve more than adding a computer scientist to a humanities project. Many digital humanities programs include computer science courses in their degree and certificate programs, but this is not yet the norm. Specifically in the history and philosophy of science, many programs do not impart the skills necessary to take advantage of the new modes of research. Likewise, computer scientists typically receive little training in the humanities, making it difficult to foster meaningful and productive collaborations with humanities scholars.
Our poster describes the Digital Innovation Group (DigInG) in the Center for Biology and Society at Arizona State University (ASU). DigInG’s primary objective is the development of computational solutions for questions in the digital humanities with a focus on digital history and philosophy of science. Our group trains students from the computer science department together with students from the humanities. We develop user-oriented innovative tools, methods, and infrastructures, and foster an understanding for each other’s fields by teaching a skill set that enables students to communicate more effectively.
As part of DigInG, we developed a course that puts computer science students in a room with humanities students to work together on digital humanities projects. In addition, we offer the opportunity to work on the software development projects in our lab as student workers. We emphasize software engineering best practices and cross-disciplinary interaction. For example, in the beginning of the semester the class develops a course website, which requires them to learn how to use Git and GitHub. Students from the humanities learn the basics of programming. Computer science students acquire a mindset that better prepares them for working on digital humanities projects and learn how to better communicate with those outside their field. We discuss topics such as the importance of authority control, metadata, or resource discovery. In our experience, the students gain a lot from participating in our class as for many of them it is the first time that they work with students from a very different field of study. For instance, one humanities student noted that “learning to formulate questions in ways that computer scientists and software developers can understand” was one of the most valuable outcomes for them.
Not only does DigInG play an important role in developing software for humanities research, it also creates an environment for hands-on training for graduate and undergraduate students in computer science and the humanities. We hope that our poster will contribute to broadening the discussion about how digital and computational humanities programs are organized. We believe that software development and training in the digital humanities do not need to be separate endeavors.
Bibliography
Murdock J., Allen C., DeDeo S.
(2015). Exploration and Exploitation of Victorian Science in Darwin's Reading Notebooks.
CoRR
. http://arxiv.org/abs/1509.07175 (accessed 31 October 2015).
Neuroth H., Lohmeier F., Smith, K.
(2011). TextGrid – Virtual Research Environment for the Humanities.
International Journal of Digital Curation
,
6
(2).
Ramsay, S.
(2012). Programming with Humanists: Reflections on Raising an Army of Hacker-Scholars in the Digital Humanities. In Hirsch B. D. (ed.),
Digital Humanities Pedagogy: Practices, Principles and Politics
. Cambridge, UK: Open Book Publishers, pp. 227-39.
Reid, A.
(2012). Graduate Education and the Ethics of the Digital Humanities. In Gold, M. K. (ed.),
Debates in the Digital Humanities
. Minneapolis: University of Minnesota Press, pp. 350-67.
