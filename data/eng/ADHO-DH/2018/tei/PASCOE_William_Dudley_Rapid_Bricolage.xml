<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title type="full">
                    <title type="main">Rapid Bricolage</title>
                    <title type="sub">Implementing Digital Humanities</title>
                </title>
                <author>
                    <persName>
                        <surname>Pascoe</surname>
                        <forename>William Dudley</forename>
                    </persName>
                    <affiliation>University of Newcastle, Australia, Australia</affiliation>
                    <email>bill.pascoe@newcastle.edu.au</email>
                </author>
            </titleStmt>
            <editionStmt>
                <edition>
                    <date>2018-04-24T08:29:00Z</date>
                </edition>
            </editionStmt>
            <publicationStmt>
                <publisher>Name, Institution</publisher>
                <address>
                    <addrLine>Street</addrLine>
                    <addrLine>City</addrLine>
                    <addrLine>Country</addrLine>
                    <addrLine>Name</addrLine>
                </address>
            </publicationStmt>
            <sourceDesc>
                <p>Converted from a Word document</p>
            </sourceDesc>
        </fileDesc>
        <encodingDesc>
            <appInfo>
                <application ident="DHCONVALIDATOR" version="1.22">
                    <label>DHConvalidator</label>
                </application>
            </appInfo>
        </encodingDesc>
        <profileDesc>
            <textClass>
                <keywords scheme="ConfTool" n="category">
                    <term>Paper</term>
                </keywords>
                <keywords scheme="ConfTool" n="subcategory">
                    <term>Short Paper</term>
                </keywords>
                <keywords scheme="ConfTool" n="keywords">
                    <term>rapid</term>
                    <term>bricolage</term>
                    <term>theory</term>
                    <term>diversity</term>
                    <term>production</term>
                </keywords>
                <keywords scheme="ConfTool" n="topics">
                    <term>gender studies</term>
                    <term>literary studies</term>
                    <term>project design</term>
                    <term>organization</term>
                    <term>management</term>
                    <term>interdisciplinary &amp; community collaboration</term>
                    <term>cultural and/or institutional infrastructure</term>
                    <term>English</term>
                    <term>indigenous studies</term>
                    <term>digital humanities history</term>
                    <term>theory</term>
                    <term>epistemology</term>
                    <term>criticism</term>
                </keywords>
            </textClass>
        </profileDesc>
    </teiHeader>
    <text>
        <body>
            <p>This paper presents a practical approach to building digital humanities (DH) at a university, across disciplines with diverse requirements, starting without institutional support, with scarce staff on a low budget. Examples are provided from the Centre For 21
                <hi rend="superscript">st</hi> Century Humanities (C21CH) at University of Newcastle, Australia (UON).
            </p>
            <p>Digital humanities (DH) requires expertise that crosses many fields from specific humanities disciplines to software development and production management. DH has a broad range in scale – from a scholar learning basic programming to hack a Python script, to multi-institutional collaborations on neural network learning. Few people are experts in all these fields meaning DH is often a collaboration. The requirements for any individual DH project can differ greatly also requiring IT skill sets that may not be easy to find in any one individual. This makes it difficult for university humanities departments with no spare cash, and often reluctant to invest heavily in IT, to successfully support DH, yet DH projects present problems beyond standard service offerings and provisioning and different to STEM. The Digital Lab of C21CH at UON has evolved an approach, here called ‘rapid bricolage’, that has successfully delivered a range of sustained internationally recognised DH projects influencing national debate. Some comparison will be made with other approaches, and while not necessarily suiting all circumstances, ‘rapid bricolage’ has proved an effective approach catering to characteristic issues in DH research, drawing from but differing to established IT practice. </p>
            <p>This ‘rapid bricolage’ approach draws on ‘rapid’ software development and ‘bricolage’, both common practice in software development and humanities, but modifies them to meet the unique needs of Digital Humanities. These modifications are epistemic, structural, methodological and a matter of degree. It has also crucially involved consultative processes to identify and Pareto prioritise inter-disciplinary interests and achievable, feasible, high impact projects. The success of these feeds back to build interest and support for DH towards funding and growth, and results in project driven infrastructure, bridging the gap between projects without infrastructure and infrastructure without projects by beginning with demonstrable utility and developing with shared human and technical resources.</p>
            <p>
                <hi rend="bold">C21CH projects include (http://c21ch.newcastle.edu.au):</hi>
            </p>
            <list type="unordered">
                <item>Colonial Frontier Massacres (v1.2) – map of massacres in Australia.</item>
                <item>EMWRN archive (v2) – innovative archive of material cultures of early modern women’s writing.</item>
                <item>Intelligent Archive (v3beta) – stylometry software.</item>
                <item>ELDTA site (v1alpha) – linguistics web player for media with tiered glosses, translations etc.</item>
                <item>Text To Map (prototype) – online automatic recognition and mapping of places in texts, linking to and from the text and the map.</item>
                <item>Scriptopict (v1) – annotations for images eg: 
                    <hi rend="italic" xml:space="preserve">Battle of Kurukshetra Mural </hi>and 
                    <hi rend="italic">Mixtec Glyph.</hi>
                </item>
            </list>
            <p>Rapid</p>
            <p>Rapid application development is an established methodology for software development focusing on getting a prototype working as early as possible followed by regular review with clients and incremental feature additions and bug fixes. For humanities departments this approach ensures that at least some software exists as an outcome of initial spending when the budget is tenuous and provides an encouraging proof of concept. For the cost of a meeting with several professors or executives a working prototype can be developed, making it worth simply trying it out rather than lengthy discussions about the value of proceeding. A rapid approach also helps greatly when the client is unclear of what is needed or has little understanding of IT. An early prototype establishes confidence and commitment early. Gaps in desired functionality immediately become clear through interaction. In particular because research is heuristic and highly changeable it allows for speculative requirements to change as the project progresses. Because of this, an even more rapid than usual approach is suited to humanities research because, as research, not all requirements cannot be known in advance. The process necessarily involves taking some action with ongoing revision, addition and enhancement. Not all aspects of humanities research activity, such as thorough rumination on a nuanced argument on a complicated problem, fit this ‘rapid’ model, but:</p>
            <p>- the speculative, heuristic activities necessary to research are enhanced; </p>
            <p>- some slower methodical activities essential for rigour and completeness can be sped up, sometimes making research possible that otherwise would not have been, or improved through the need for clear structures and definitions; </p>
            <p>- the 'slow' process of rumination, of considering complex problems and developing arguments, while irreplaceable, can be augmented.</p>
            <p>Bricolage</p>
            <p>Bricolage is a well-established approach in software development. Software is typically put together from pre-existing libraries, frameworks and cut and pasted code that is modified and added to, to produce something that works in ways that conventional intellectual property and copyright are not practically applicable to. This approach is in sympathy with developments in critical theory in the late 20
                <hi rend="superscript">th</hi> century and after, with ‘bricolage’ and the problematization of authorship being major themes in describing postmodernity and in contemporary humanities methodology. Just as a very rapid approach suits humanities research so too is bricolage especially suitable for DH. 
            </p>
            <p>As research, DH typically requires constant and regular modification and adjustment, rather than delivery of a working system according to contracted specification. Much software is developed for a STEM or commercial purpose, or has a STEM like approach to problem solving. STEM and the commercial sector have larger budgets and devote larger budgets to software. This means that humanists are often in a pragmatic situation of re-using software from different disciplines despite having divergent requirements. Humanities often focus on complexity, exceptions, structural change and highly contingent historical (not repeated) events, while STEM and commerce focus on systemisation, normalisation, ceteris paribus and repeatability, for example. If humanities researchers are to avoid fitting research to the software limitations this means constantly adapting systems to their own different epistemic, ontological and methodological paradigm, ie: bricolage. </p>
            <p>The DH research need for these two approaches, rapid application development and bricolage, combined in extremis presents challenges to established IT practice. These challenges can be met with appropriate staffing, strategy and a ‘rapid bricolage’ approach to build DH at a University despite diverse demands and resourcing adversity.</p>
        </body>
        <back>
            <div type="bibliogr">
                <listBibl>
                    <head>Bibliography</head>
                    <bibl>Craig, H., Pascoe, W. (2018).
                        <hi rend="italic" xml:space="preserve"> Intelligent Archive v3.0</hi> Newcastle: Centre For 21 Century Humanities
                    </bibl>
                    <bibl>Ryan, L., Debenham, J., Brown, M., Pascoe, W. (2017). 
                        <hi rend="italic">Colonial Frontier Massacres</hi> Newcastle: Centre For 21 Century Humanities http://hdl.handle.net/1959.13/1340762
                    </bibl>
                    <bibl>Smith, R., Pender, P., Pascoe, W. (2017). 
                        <hi rend="italic" xml:space="preserve">Early Modern Women's Research Network Digital Archive </hi>Newcastle: Centre For 21 Century Humanities http://hdl.handle.net/1959.13/1326860
                    </bibl>
                </listBibl>
            </div>
        </back>
    </text>
</TEI>
