<?xml version="1.0" encoding="UTF-8"?><TEI xmlns="http://www.tei-c.org/ns/1.0"><teiHeader><fileDesc><titleStmt><title type="full"><title type="main">Nonâ€“Linear Temporality in <em>The Sound and the Fury -- </em>A Digital Humanities View</title><title type="sub"/></title></titleStmt><author><persName><surname>Li</surname><forename>Ruifang</forename></persName><affiliation>Shanghai International Studies University</affiliation><email>nora_li@163.com</email></author><editionStmt><edition><date>43760</date></edition></editionStmt><publicationStmt><publisher>Name, Institution</publisher><address><addrLine>Street</addrLine><addrLine>City</addrLine><addrLine>Country</addrLine><addrLine>Name</addrLine></address></publicationStmt><sourceDesc><p>Converted from an OASIS Open Document</p></sourceDesc></fileDesc><encodingDesc><appInfo><application ident="DHCONVALIDATOR" version="1.22"><label>DHConvalidator</label></application></appInfo></encodingDesc><profileDesc><textClass><keywords scheme="ConfTool" n="category"><term>Paper</term></keywords><keywords scheme="ConfTool" n="subcategory"><term>Poster</term></keywords><keywords scheme="ConfTool" n="keywords"><term>The Sound and the Fury</term><term>non-Linear chronology</term><term>constraint logic programming</term><term>space of contested meanings</term><term>simplex</term></keywords><keywords scheme="ConfTool" n="topics"><term>GlobalEuropeEnglishNorth America20th Century</term><term>Contemporary</term><term>spatial &amp; spatio-temporal analysis, modeling and visualization</term><term>text encoding and markup language creation, deployment, and analysis</term><term>Humanities computing</term><term>Literary studies</term></keywords></textClass></profileDesc></teiHeader><text><body><p>This paper uses constraint logic programming to analyze the timeline of The Sound and the Fury. The basic idea is to encode inter-temporal references into inequalities, and input these into a computer program. The computer then tests possible years when each event could have occurred, while satisfying each of the constraints.</p><p>If the constraints are inconsistent, then the program will identify the &#8216;minimal conflict set&#8217;. If the constraints can be satisfied, then the program will output all possible orderings of events that are consistent with the constraints.</p><p>Instead of using computers to identify a unique &#8216;correct&#8217; interpretation, this paper attempts to model the space of contested meanings within the text.</p><p>In linear programming, such a space is called a simplex. With large numbers of constraints, the simplex is an n-dimensional surface far beyond human visualization -- this monstrous geometrical object is the space of possible meaning for Faulkner&#8217;s chronology.</p></body></text></TEI>