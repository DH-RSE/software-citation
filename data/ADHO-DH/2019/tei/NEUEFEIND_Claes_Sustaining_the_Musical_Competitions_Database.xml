<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title type="full">
                    <title type="main">Sustaining the Musical Competitions Database: a TOSCA-based Approach to Application Preservation in the Digital Humanities</title>
                    <title type="sub"/>
                </title>
                <author>
                    <persName>
                        <surname>Neuefeind</surname>
                        <forename>Claes</forename>
                    </persName>
                    <affiliation>Data Center for the Humanities, University of Cologne, Germany</affiliation>
                    <email>c.neuefeind@uni-koeln.de</email>
                </author>
                <author>
                    <persName>
                        <surname>Schildkamp</surname>
                        <forename>Philip</forename>
                    </persName>
                    <affiliation>Data Center for the Humanities, University of Cologne, Germany</affiliation>
                    <email>philip.schildkamp@uni-koeln.de</email>
                </author>
                <author>
                    <persName>
                        <surname>Mathiak</surname>
                        <forename>Brigitte</forename>
                    </persName>
                    <affiliation>Data Center for the Humanities, University of Cologne, Germany</affiliation>
                    <email>bmathiak@uni-koeln.de</email>
                </author>
                <author>
                    <persName>
                        <surname>Marčić</surname>
                        <forename>Aleksander</forename>
                    </persName>
                    <affiliation>Department of Musicology, University of Cologne, Germany</affiliation>
                    <email>amarcic2@uni-koeln.de</email>
                </author>
                <author>
                    <persName>
                        <surname>Hentschel</surname>
                        <forename>Frank</forename>
                    </persName>
                    <affiliation>Department of Musicology, University of Cologne, Germany</affiliation>
                    <email>fhentsch@uni-koeln.de</email>
                </author>
                <author>
                    <persName>
                        <surname>Harzenetter</surname>
                        <forename>Lukas</forename>
                    </persName>
                    <affiliation>Institute of Architecture of Application Systems, University of Stuttgart, Germany</affiliation>
                    <email>lukas.harzenetter@iaas.uni-stuttgart.de</email>
                </author>
                <author>
                    <persName>
                        <surname>Breitenbücher</surname>
                        <forename>Uwe</forename>
                    </persName>
                    <affiliation>Institute of Architecture of Application Systems, University of Stuttgart, Germany</affiliation>
                    <email>uwe.breitenbuecher@iaas.uni-stuttgart.de</email>
                </author>
                <author>
                    <persName>
                        <surname>Barzen</surname>
                        <forename>Johanna</forename>
                    </persName>
                    <affiliation>Institute of Architecture of Application Systems, University of Stuttgart, Germany</affiliation>
                    <email>johanna.barzen@iaas.uni-stuttgart.de</email>
                </author>
                <author>
                    <persName>
                        <surname>Leymann</surname>
                        <forename>Frank</forename>
                    </persName>
                    <affiliation>Institute of Architecture of Application Systems, University of Stuttgart, Germany</affiliation>
                    <email>frank.leymann@iaas.uni-stuttgart.de</email>
                </author>
            </titleStmt>
            <editionStmt>
                <edition>
                    <date>2019-04-29T16:59:21</date>
                </edition>
            </editionStmt>
            <publicationStmt>
                <publisher>Name, Institution</publisher>
                <address>
                    <addrLine>Street</addrLine>
                    <addrLine>City</addrLine>
                    <addrLine>Country</addrLine>
                    <addrLine>Name</addrLine>
                </address>
            </publicationStmt>
            <sourceDesc>
                <p>Converted from an OASIS Open Document</p>
            </sourceDesc>
        </fileDesc>
        <encodingDesc>
            <appInfo>
                <application ident="DHCONVALIDATOR" version="1.22">
                    <label>DHConvalidator</label>
                </application>
            </appInfo>
        </encodingDesc>
        <profileDesc>
            <textClass>
                <keywords scheme="ConfTool" n="category">
                    <term>Paper</term>
                </keywords>
                <keywords scheme="ConfTool" n="subcategory">
                    <term>Short Paper</term>
                </keywords>
                <keywords scheme="ConfTool" n="keywords">
                    <term>Living Systems</term>
                    <term>Sustainability</term>
                    <term>Research Software</term>
                    <term>Musicology</term>
                    <term>TOSCA-Standard</term>
                </keywords>
                <keywords scheme="ConfTool" n="topics">
                    <term>musicology</term>
                    <term>software design and development</term>
                    <term>standards and interoperability</term>
                    <term>English</term>
                    <term>computer science and informatics</term>
                    <term>sustainability and preservation</term>
                </keywords>
            </textClass>
        </profileDesc>
    </teiHeader>
    <text>
        <body>
            <div type="div1" rend="DH-Heading">
                <head>Introduction</head>
                <p>Within the Digital Humanities (DH), research applications such as databases, digital editions, interactive visualizations, and virtual research environments play a central role in securing and presenting research results [16]. Often, such 
                    <hi rend="italic">living systems</hi> [15] are the actual bearers of information content, thus representing the added value of the scientific output [16]. However, within the DH a great number of smaller, highly heterogeneous software solutions are produced, which all are subject to the problem of 
                    <hi rend="italic">software aging</hi> [14]. Against this background, institutions like the Data Center for the Humanities at the University of Cologne (DCH, 
                    <ref target="http://dch.uni-koeln.de/">
                        <hi rend="color(#1155cc)underline">http://dch.uni-koeln.de</hi>
                    </ref>) face the challenge of preserving an unknown, potentially unlimited number of research software systems to assure their availability on a permanent basis. While there are well-established methods of preserving primary research data, e.g. in existing data repositories and archives, living systems are part of a constantly changing digital ecosystem and must regularly adapt to it, e. g. they need (security) updates. However, due to their steadily increasing number and their heterogeneity (both technologically and methodologically), permanent maintenance, support and provisioning of such living systems is a major technical, organizational, and therefore ultimately financial challenge. 
                </p>
                <p>This contribution presents an approach to the preservation of web-based research applications in the DH, based on the 
                    <hi rend="italic">Topology and Orchestration Specification for Cloud Applications</hi> (TOSCA) [11, 12, 13]. TOSCA is an OASIS standard for modeling, provisioning, and managing cloud applications in a standardized and provider-independent way. The TOSCA standard aims at providing a superset of service modeling and orchestration features and can thus be seen as a meta-framework that includes vendor and domain specific solutions like e. g. Docker, OpenStack or VSphere. In the following, we focus on an exemplary use case to describe the main concepts of our approach. 
                </p>
            </div>
            <div type="div1" rend="DH-Heading">
                <head>The Musical Competitions Database</head>
                <p>The DFG-funded project 
                    <hi rend="italic">Musical Competitions between 1820 and 1870</hi> is conducted by the Department of Musicology at the University of Cologne in cooperation with the Cologne Center for eHumanities (CCeH). The aim of the project is to gather comprehensive information about music related competitions from 1820 to 1870 [6]. Data is extracted by musicologists from music-related journals and stored as JSON files in a document-oriented database (CouchDB). Access to the data is given through a web application written in React (
                    <ref target="http://musical-competitions.uni-koeln.de/">
                        <hi rend="color(#000080)underline">http://musical-competitions.uni-koeln.de</hi>
                    </ref>). Further, Elasticsearch is used to provide advanced options for querying/filtering and analysis of the data. At the time of writing, the database features information on approximately 1300 musical competitions, 1000 corporations and 3100 persons related to those competitions. The 
                    <hi rend="italic">Musical Competitions Database</hi> contains and presents a unique data set relevant to the musicology community. To allow for reproducibility in the sense of good scientific practice, a sustainability strategy to keep this data accessible on a permanent basis must include the web application itself, because the separation and archiving of the primary data alone would inevitably lead to a loss of functionality (and thus information).
                </p>
            </div>
            <div type="div1" rend="DH-Heading">
                <head>TOSCA and OpenTOSCA</head>
                <p>Technological basis of our approach is the OASIS standard TOSCA [11, 12, 13]. TOSCA allows for a portable description of IT systems to automate their provisioning and management. In TOSCA, a cloud application or service [9] is modeled as a 
                    <hi rend="italic">Service </hi>
                    <hi rend="italic">Template</hi>. Inside a Service Template, the 
                    <hi rend="italic">Topology Template</hi> describes the service’s topology as a directed multigraph, consisting of 
                    <hi rend="italic">Node Templates</hi> and 
                    <hi rend="italic">Relationship Templates</hi> that specify the edges between the nodes. Thus, this enables to describe arbitrary deployments in the form of 
                    <hi rend="italic">declarative deployment models</hi> [5]. Underneath, TOSCA employs a type system defining common properties and attributes in 
                    <hi rend="italic">Node Types</hi> and 
                    <hi rend="italic">Relationship Types</hi>, respectively. To automatically deploy, provision and manage the modeled service, TOSCA defines an archive format called 
                    <hi rend="italic">Cloud Service Archive</hi> (CSAR) which contains the Service Template, including all Node Types and Relationship Types, as well as all required software artifacts, scripts, and binaries needed for provisioning. Moreover, imperative management plans can be added to CSARs, which enables the implementation of arbitrary kinds of management functionality in an automatically executable manner. These plans can be implemented using standardized workflow languages such as BPEL or BPMN, or domain-specific modeling extensions such as BPMN4TOSCA [7]. Any TOSCA runtime environment can consume such a CSAR to automatically deploy and instantiate the enclosed application [2]. 
                </p>
                <p>In a series of projects, the Institute for Architecture of Application Systems (IAAS, 
                    <ref target="http://iaas.uni-stuttgart.de/">
                        <hi rend="color(#1155cc)underline">http://iaas.uni-stuttgart.de</hi>
                    </ref>) at the University of Stuttgart has developed the OpenTOSCA ecosystem, an open source implementation for the TOSCA standard. OpenTOSCA includes (i) the graphical modeling tool 
                    <hi rend="italic">Winery</hi> for the creation of TOSCA-based application models [8], (ii) the runtime environment 
                    <hi rend="italic">OpenTOSCA container</hi> for automated provisioning and management of the modeled applications [1], and (iii) the self-service portal 
                    <hi rend="italic">Vinothek</hi> [4], which lists all applications installed in the OpenTOSCA container and serves as a graphical user interface. 
                </p>
                <p>We believe that the TOSCA standard is generally suitable for assuring the digital sustainability of research results, as research applications, which are packaged in CSARs, can be executed years later by a TOSCA-compliant runtime environment [3].</p>
            </div>
            <div type="div1" rend="DH-Heading">
                <head>A TOSCA Model for the Musical Competitions Database</head>
                <p>In the following, we describe an application model for the Musical Competitions Database to exemplify some of the basic concepts of (Open)TOSCA. The application is composed of a CouchDB and Elasticsearch instance and accessed through a React frontend. The resulting TOSCA-compliant topology model is depicted in figure 1.</p>
                <p>
                    <figure>
                        <graphic url="Pictures/86ceb84447a3e720aaa1c46b47ae2c6c.png"/>
                        <head>Screenshot of OpenTOSCA’s modeling tool Winery, showing the topology of the use case application. On the left side, the available components are listed.</head>
                    </figure>
                </p>
                <p>The topology consists of a React web application hosted on an Apache web server, which itself is hosted on a Docker container, where the container operation system can be passed as a Docker image identifier (e.g. 
                    <hi rend="italic">ubuntu:latest</hi>). Additionally, the React application connects to a CouchDB database and to Elasticsearch. To accommodate Elasticsearch's dependency on Java, an OpenJDK has to be available. Therefore, seven different node types, namely 
                    <hi rend="italic">React</hi>, 
                    <hi rend="italic">Apache</hi>, 
                    <hi rend="italic">CouchDB</hi>, 
                    <hi rend="italic">Elasticsearch</hi>, 
                    <hi rend="italic">OpenJDK</hi>,
                    <hi rend="italic"> DockerContainer</hi> and 
                    <hi rend="italic">DockerEngine</hi>, as well as the 
                    <hi rend="italic">HostedOn</hi>, the 
                    <hi rend="italic">ConnectsTo</hi> and the 
                    <hi rend="italic">DependsOn</hi> relationship types must be available. A TOSCA Service Template describing this application will contain those seven node templates and three relationship templates – where each template is an instance of the respective type definition. The resulting service template can then be packed in a CSAR which may be instantiated by any TOSCA runtime or to be archived in a repository. As the TOSCA standard (and therefore OpenTOSCA) thrives on being vendor-independent, the topology root depicted in figure 1, namely 
                    <hi rend="italic">DockerEngine</hi> and 
                    <hi rend="italic">DockerContainer</hi>, may be substituted for e.g. OpenStack or VSphere and their respective VM/container representations.
                </p>
            </div>
            <div type="div1" rend="DH-Heading">
                <head>Summary and Outlook</head>
                <p>The concepts described above emerged from 
                    <hi rend="italic">SustainLife</hi> [10], a DFG-funded joint project of the DCH Cologne and the IAAS Stuttgart. The overall objective is to develop generic solutions for standards-based operation and maintenance of DH-applications and to implement them in a way that they find practical application, e.g. in humanities data centers like the DCH. 
                </p>
                <p>As TOSCA depends on a generic type system enabling the reuse of recurring components, we work towards providing a set of typical system components. Examples for components, which were identified in further use cases [10] and modeled in TOSCA are Java runtime environments, the Spring framework and several types of databases like MySQL, mongoDB and eXist-db. In addition, reusable Service Templates reflecting typical software stacks are under development. For example, a common pattern for web applications is the so-called LAMP-stack, composed of a Linux operating system, an Apache web server, a MySQL/MariaDB database and a PHP/Perl/Python interpreter. These components can be reused are intended to simplify future application modelling, development and maintenance using TOSCA and the OpenTOSCA ecosystem. </p>
                <p>Beyond that, a number of further extensions of the OpenTOSCA ecosystem are in the scope of the SustainLife project. For example, applications that are archived in CSARs need to be deployable several years after their development. Therefore, approaches to 
                    <hi rend="italic">freeze</hi> and 
                    <hi rend="italic">defrost</hi> whole applications and their respective execution states are also part of our research. This includes the possibility to version TOSCA models, to reflect the fact that living systems are subject to constant changes. Another desideratum is to add the possibility to update a service’s components. If a component must be exchanged because of security issues or deprecation, the CSAR may no longer be deployable. We therefore work on additional management functionalities which provide standardized operating and maintenance solutions, e.g. applying updates or software patches. 
                </p>
                <p>With our approach we expect to reduce maintenance costs significantly and will evaluate this expectation on the basis of selected use cases. Findings and best practices are prepared in a way that they can be transferred to partners and are communicated to the scientific community through workshops and publications. Thus, with this contribution, we want to trigger a discussion about the applicability of methods and technologies of professional cloud deployment and provisioning strategies to problems of long-term availability of research software in the DH-community.</p>
            </div>
            <div type="div1" rend="DH-Heading">
                <head>Acknowledgements</head>
                <p>This work is partially funded by the Deutsche Forschungsgemeinschaft (DFG, German Research Foundation). Project title: “SustainLife – Erhalt lebender, digitaler Systeme für die Geisteswissenschaften” (see 
                    <ptr target="http://gepris.dfg.de/gepris/projekt/379522012"/>).
                </p>
            </div>
        </body>
        <back>
            <div type="bibliogr">
                <listBibl>
                    <head>Bibliography</head>
                    <bibl>T. Binz, U. Breitenbücher, F. Haupt, O. Kopp, F. Leymann, A. Nowak, S. Wagner. “OpenTOSCA - A Runtime for TOSCA-based Cloud Applications”. In: ICSOC, 2013, S. 692-695, 2013. </bibl>
                    <bibl>U. Breitenbücher, T. Binz, K. Képes, O. Kopp, F. Leymann, J. Wettinger. “Combining Declarative and Imperative Cloud Application Provisioning based on TOSCA”, IC2E, S. 87–96, 2014. </bibl>
                    <bibl>U. Breitenbücher, J. Barzen, M. Falkenthal, F. Leymann. “Digitale Nachhaltigkeit in den Geisteswissenschaften durch TOSCA: Nutzung eines standardbasierten Open-Source Öko-systems”. Konferenzabstracts DHd 2017: Digitale Nachhaltigkeit, S. 235-237, 2017. </bibl>
                    <bibl>U. Breitenbücher, T. Binz, O. Kopp und F. Leymann. “Vinothek - A Self-Service Portal for TOSCA”. In: ZEUS 2014, p. 69-72, 2014.</bibl>
                    <bibl>C. Endres, U. Breitenbücher, M. Falkenthal, O. Kopp, F. Leymann, J. Wettinger. “Declarative vs. Imperative: Two Modeling Patterns for the Automated Deployment of Applications”. In Proceedings of the 9th International Conference on Pervasive Patterns and Applications (PATTERNS), 2017, pp. 22-27.</bibl>
                    <bibl>F. Hentschel. “Institutionalisierung des ästhetischen Werturteils: Musikalische Preisausschreiben im 19. Jahrhundert”. In: Archiv für Musikwissenschaft 69 (2012), pp. 110-121, 2012.</bibl>
                    <bibl>O. Kopp, T. Binz, U. Breitenbücher, F. Leymann. „BPMN4TOSCA: A domain-specific language to model management plans for composite applications”. In International Workshop on Business Process Modeling Notation, pp. 38-52. Springer, Berlin, Heidelberg, 2012. </bibl>
                    <bibl>O. Kopp, T. Binz, U. Breitenbücher, F. Leymann. “Winery – A Modeling Tool for TOSCA-based Cloud Applications”. In: ICSOC, 2013, S. 700-704, 2013.</bibl>
                    <bibl>F. Leymann, U. Breitenbücher, S. Wagner, J. Wettinger. “Native Cloud Applications: Why Monolithic Virtualization Is Not Their Foundation”. Cloud Computing and Services Science, Springer, pp. 16-40, 2017. </bibl>
                    <bibl>C. Neuefeind, L. Harzenetter, P. Schildkamp, U. Breitenbücher, B. Mathiak, J. Barzen, F. Leymann. "The SustainLife Project – Living Systems in Digital Humanities". In: Proceedings of the 12th Advanced Summer School on Service-Oriented Computing, 2018 (IBM Research Report RC25681), pp.101-112, 2018</bibl>
                    <bibl>OASIS: “Topology and Orchestration Specification for Cloud Applications Version 1.0”, 2013. </bibl>
                    <bibl>OASIS. “Topology and Orchestration Specification for Cloud Applications (TOSCA) Primer Version 1.0”. 2013.</bibl>
                    <bibl>OASIS: “TOSCA Simple Profile in YAML”, Version 1.0, 2015.</bibl>
                    <bibl>D. L. Parnas. “Software Aging”. In: Proceedings of the 16th International Conference on Software Engineering (ICSE 1994). IEEE, May 1994, pp. 279-287, 1994.</bibl>
                    <bibl>P. Sahle, S. Kronenwett. “Jenseits der Daten: Überlegungen zu Datenzentren für die Geisteswissenschaften am Beispiel des Kölner Data Center for the Humanities”. In: LIBREAS. Library Ideas 23, pp. 76-96, 2013. </bibl>
                    <bibl>U. Wuttke, C. Engelhardt, S. Buddenbohm. “Angebotsgenese für ein geisteswissenschaftliches Forschungsdatenzentrum”. In: Zeitschrift für digitale Geisteswissenschaften, 2016. </bibl>
                </listBibl>
            </div>
        </back>
    </text>
</TEI>
